pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')     // Jenkins credential ID
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key') // Jenkins credential ID
        AWS_REGION            = 'us-west-2'
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Pull the Terraform code specifically in the `infra` directory
                dir('infra') {
                    git branch: 'main', url: 'https://github.com/TomMLe/changing-room.git'
                }
            }
        }

        stage('Terraform Init') {
            steps {
                dir('infra') {
                    // Initialize Terraform within the infra directory
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('infra') {
                    // Generate the Terraform execution plan within the infra directory
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        stage('Approve Plan') {
            steps {
                // Pause for user approval before applying changes
                input message: 'Do you want to apply these changes?', ok: 'Apply'
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('infra') {
                    // Apply the Terraform execution plan within the infra directory
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }
    }

    post {
        always {
            dir('infra') {
                // Archive the Terraform state files and clean workspace
                archiveArtifacts artifacts: '**/*.tfstate', allowEmptyArchive: true
                cleanWs()
            }
        }
        success {
            echo 'Terraform applied successfully!'
        }
        failure {
            echo 'Terraform deployment failed.'
        }
    }
}
